// <auto-generated />
using System;
using FUNewsManagement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeThanhPhuongMVC.Migrations
{
    [DbContext(typeof(FUNewsManagementDbContext))]
    [Migration("20250717012225_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.Category", b =>
                {
                    b.Property<short>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CategoryID"));

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short?>("ParentCategoryID")
                        .HasColumnType("smallint");

                    b.HasKey("CategoryID");

                    b.HasIndex("ParentCategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = (short)1,
                            CategoryDescription = "General news and announcements",
                            CategoryName = "General News",
                            IsActive = true
                        },
                        new
                        {
                            CategoryID = (short)2,
                            CategoryDescription = "Academic related news and updates",
                            CategoryName = "Academic News",
                            IsActive = true
                        },
                        new
                        {
                            CategoryID = (short)3,
                            CategoryDescription = "Student activities and events",
                            CategoryName = "Student Activities",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.NewsArticle", b =>
                {
                    b.Property<string>("NewsArticleID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("CategoryID")
                        .HasColumnType("smallint");

                    b.Property<short>("CreatedByID")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headline")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsContent")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("NewsSource")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<bool>("NewsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("UpdatedByID")
                        .HasColumnType("smallint");

                    b.HasKey("NewsArticleID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("UpdatedByID");

                    b.ToTable("NewsArticles");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.NewsTag", b =>
                {
                    b.Property<string>("NewsArticleID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(0);

                    b.Property<int>("TagID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("NewsArticleID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("NewsTags");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.SystemAccount", b =>
                {
                    b.Property<short>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("AccountID"));

                    b.Property<string>("AccountEmail")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<int>("AccountRole")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("AccountEmail")
                        .IsUnique();

                    b.ToTable("SystemAccount");

                    b.HasData(
                        new
                        {
                            AccountID = (short)1,
                            AccountEmail = "admin@FUNewsManagementSystem.org",
                            AccountName = "System Administrator",
                            AccountPassword = "@@abc123@@",
                            AccountRole = 3
                        },
                        new
                        {
                            AccountID = (short)2,
                            AccountEmail = "staff@FUNewsManagementSystem.org",
                            AccountName = "Staff User",
                            AccountPassword = "staff123",
                            AccountRole = 1
                        },
                        new
                        {
                            AccountID = (short)3,
                            AccountEmail = "lecturer@FUNewsManagementSystem.org",
                            AccountName = "Lecturer User",
                            AccountPassword = "lecturer123",
                            AccountRole = 2
                        });
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagID"));

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TagID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.Category", b =>
                {
                    b.HasOne("FUNewsManagement.BusinessObjects.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.NewsArticle", b =>
                {
                    b.HasOne("FUNewsManagement.BusinessObjects.Category", "Category")
                        .WithMany("NewsArticles")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.BusinessObjects.SystemAccount", "CreatedBy")
                        .WithMany("NewsArticles")
                        .HasForeignKey("CreatedByID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.BusinessObjects.SystemAccount", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.NewsTag", b =>
                {
                    b.HasOne("FUNewsManagement.BusinessObjects.NewsArticle", "NewsArticle")
                        .WithMany()
                        .HasForeignKey("NewsArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FUNewsManagement.BusinessObjects.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsArticle");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.Category", b =>
                {
                    b.Navigation("NewsArticles");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("FUNewsManagement.BusinessObjects.SystemAccount", b =>
                {
                    b.Navigation("NewsArticles");
                });
#pragma warning restore 612, 618
        }
    }
}
